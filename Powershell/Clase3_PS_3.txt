Juan Manuel López Cleves – A00130500
Clase 3 - taller
1.	Cree dos archivos de texto similares (con una o dos líneas diferentes). Compárelos empleando diff.
Se crearon ambos archivos con el comando "ni", que es el alias de New-Item
Se compararon los archivos con el comando diff, se puede ver que el archivo note1.txt fue el último en ser creado

2.	Qué ocurre si se ejecuta:
get-service | export-csv servicios.csv | out-file
Marca error debido a que en la parte de out-file se espera es la ruta donde se guardará

3.	Cómo haría para crear un archivo delimitado por puntos y comas (;)? PISTA: Se emplea export-csv, pero con un parámetro adicional.
Se emplea el comado -Delimeter para el caracter que se necesita
Comando: get-service | export-csv serviciosprueba.csv -Delimiter ';'

4.	Export-cliXML y Export-CSV modifican el sistema, porque pueden crear y sobreescribir archivos. Existe algún parámetro que evite la sobreescritura de un archivo existente? Existe algún parámetro que permita que el comando pregunte antes de sobresscribir un archivo?
comando para evitar sobreescritura: Get-Process |export-csv servicios.csv -NoClobber
comando para confirmar: Get-Process |export-csv servicios.csv -Confirm

5.	Windows emplea configuraciones regionales, lo que incluye el separador de listas. En Windows en inglés, el separador de listas es la coma (,). Cómo se le dice a Export-CSV que emplee el separador del sistema en lugar de la coma?
comando: Get-Service | Export-Csv servicios.csv -UseCulture

6.	Identifique un cmdlet que permita generar un número aleatorio.
comando: Get-Random

7.	Identifique un cmdlet que despliegue la fecha y hora actuales.
comando: Get-Date

8.	Qué tipo de objeto produce el cmdlet de la pregunta 7?
produce el tipo DateTime

9.	Usando el cmdlet de la pregunta 7 y select-object, despliegue solamente el día de la semana, así:
   DayOfWeek
   ---------
    Thursday
comando: Get-Date | Select-Object -Property  "DayOfWeek"

10.	Identifique un cmdlet que muestre información acerca de parches (hotfixes) instalados en el sistema.
comando: Get-HotFix

11.	Empleando el cmdlet de la pregunta 10, muestre una lista de parches instalados. Luego extienda la expresión para ordenar la lista por fecha de instalación, y muestre en pantalla únicamente la fecha de instalación, el usuario que instaló el parche, y el ID del parche. Recuerde examinar los nombres de las propiedades.
comando: Get-HotFix | Sort-Object InstalledOn | Select-Object InstalledOn, InstalledBy, HotFixId

12.	Complemente la solución a la pregunta 11, para que el sistema ordene los resultados por la descripción del parche, e incluya en el listado la descripción, el ID del parche, y la fecha de instalación. Escriba los resultados a un archivo HTML.
comando: Get-HotFix | Sort-Object Description | Select-Object Description, HotFixId, InstalledOn | ConvertTo-Html | Out-File so.html



13.	Muestre una lista de las 50 entradas más nuevas del log de eventos System. Ordene la lista de modo que las entradas más antiguas aparezcan primero; las entradas producidas al mismo tiempo deben ordenarse por número índice. Muestre el número índice, la hora y la fuente para cada entrada. Escriba esta información en un archivo de texto plano.
Comando: Get-EventLog system -Newest 50 | Sort-Object TimeGenerated, Index | Select-Object Index, TimeGenerated, Source | Out-File logs.txt


